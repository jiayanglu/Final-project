---
title: "EDA"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Introduction section

The dataset, diabetes_binary_health_indicators_BRFSS2015.csv, is a clean dataset of 253,680 survey responses to the CDC's BRFSS2015. The target variable Diabetes_binary has 2 classes. 0 is for no diabetes, and 1 is for prediabetes or diabetes. This dataset has 21 other feature variables and is not balanced.

Information for all the columns are listed below according to codebook15_llcp (listed in the folder):

-   Diabetes_binary: 0 = no diabetes; 1 = prediabetes or diabetes
-   HighBP: 0 = no high BP; 1 = high BP
-   HighChol: 0 = no high cholesterol; 1 = high cholesterol
-   CholCheck: 0 = no cholesterol check in 5 years; 1 = yes cholesterol check in 5 years
-   BMI: Body Mass Index
-   Smoker: Have you smoked at least 100 cigarettes in your entire life? \[Note: 5 packs = 100 cigarettes\] 0 = no; 1 = yes
-   Stroke: (Ever told) you had a stroke. 0 = no; 1 = yes
-   HeartDiseaseorAttack: coronary heart disease (CHD) or myocardial infarction (MI). 0 = no; 1 = yes
-   PhysActivity: physical activity in past 30 days - not including job. 0 = no; 1 = yes
-   Fruits: Consume Fruit 1 or more times per day. 0 = no; 1 = yes
-   Veggies: Consume Vegetables 1 or more times per day. 0 = no; 1 = yes
-   HvyAlcoholConsump: (adult men \>=14 drinks per week and adult women\>=7 drinks per week) 0 = no; 1 = yes
-   AnyHealthcare: Have any kind of health care coverage, including health insurance, prepaid plans such as HMO, etc. 0 = no; 1 = yes
-   NoDocbcCost: Was there a time in the past 12 months when you needed to see a doctor but could not because of cost? 0 = no; 1 = yes
-   GenHlth: Would you say that in general your health is: scale 1-5. 1 = excellent; 2 = very good; 3 = good; 4 = fair; 5 = poor
-   MentHlth: days of poor mental health. scale 0-30 days
-   PhysHlth: physical illness or injury days in the past 30 days. scale 0-30 days
-   DiffWalk: Do you have serious difficulty walking or climbing stairs? 0 = no; 1 = yes
-   Sex: 0 = female; 1 = male
-   Age: 13-level age category (\_AGEG5YR see codebook) 1 = 18-24; 9 = 60-64; 13 = 80 or older
-   Education: Education level (EDUCA see codebook) scale 1-6. 1 = Never attended school or only kindergarten; 2 = Grades 1 through 8 (Elementary); 3 = Grades 9 through 11 (Some high school); 4 = Grade 12 or GED (High school graduate); 5 = College 1 year to 3 years (Some college or technical school); 6 = College 4 years or more (College graduate)
-   Income: Income scale (INCOME2 see codebook) scale 1-8. 1 = less than \$10,000; 2 = Less than \$15,000 (\$10,000 to less than \$15,000); 3 = Less than \$20,000 (\$15,000 to less than \$20,000); 4= Less than \$25,000 (\$20,000 to less than \$25,000); 5 = less than \$35,000; 6 = Less than \$50,000 (\$35,000 to less than \$50,000); 7 = Less than \$75,000 (\$50,000 to less than \$75,000); 8 = \$75,000 or more

The purpose of this EDA is to read in data from diabetes_binary_health_indicators_BRFSS2015.csv and to clean BRFSS data into a useable format for modeling based on diabetes disease research regarding factors influencing diabetes disease and other chronic health conditions. Only select features are included in this analysis.

## Data

```{r}
#load packages needed
library(tidyverse)
library(ggplot2)
library(caret)
```

```{r}
#read in csv data
data_original <- read_csv('diabetes_binary_health_indicators_BRFSS2015.csv')
str(data_original)
```

From the output, we have this dataset with 253680 rows and 22 columns.

Now, we can check sorted unique values in this dataset to learn more about our data

```{r}
unique_values <- sapply(data_original, unique) 
sorted_unique <- lapply(unique_values, sort)
sorted_unique
```

Missing values are checked here.

```{r}
#check total NA data entries from each column
colSums(is.na(data_original))
#check total zero entried from each column
colSums(data_original == 0)
```

First, from the result, we can see that there are no NA entries from each variable. Second, considering the meaning of different variables, we can see that there are no column with zero values indicating missing values. Altogether, we can conclude that there are no missing values in the whole dataset.

Next, we can check whether there are duplicated data in this dataset.

```{r}
deplicates <- data_original[duplicated(data_original), ]
nrow(deplicates)
#from the output, we see that there are 24206 duplicates

#then we need to exclude data that are duplicated
#dataset data is updated here
data_no_duplicates <- data_original[!duplicated(data_original), ]
nrow(data_no_duplicates)
#from the output, there are total 229,474 rows in the updated dataset data
```

Now we want to convert numeric variables to factors according to previous sorted unique values for each variable.

```{r}
data <- data_no_duplicates

data$Diabetes_binary <- factor(
  data$Diabetes_binary, 
  levels = c(0,1), 
  labels = c("No_diabetes", "Prediabetes_or_diabetes")
)

data$HighBP <- factor(
  data$HighBP,
  levels = c(0,1), 
  labels = c("No_high_BP", "High_BP")
)

data$HighChol <- factor(
  data$HighChol,
  levels = c(0,1), 
  labels = c("No_high_cholesterol", "High_cholesterol")
)

data$CholCheck <- factor(
  data$CholCheck,
  levels = c(0,1), 
  labels = c("No_cholesterol_check", "Cholesterol_check")
)

data$Smoker <- factor(
  data$Smoker,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$Stroke <- factor(
  data$Stroke,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$HeartDiseaseorAttack <- factor(
  data$HeartDiseaseorAttack,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$PhysActivity <- factor(
  data$PhysActivity,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$Fruits <- factor(
  data$Fruits,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$Veggies <- factor(
  data$Veggies,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$HvyAlcoholConsump <- factor(
  data$HvyAlcoholConsump,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$AnyHealthcare <- factor(
  data$AnyHealthcare,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$NoDocbcCost <- factor(
  data$NoDocbcCost,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$GenHlth <- factor(
  data$GenHlth,
  levels = c(1, 2, 3, 4, 5), 
  labels = c("Excellent", "Very_good", "Good", "Fair", "Poor")
)

data$DiffWalk <- factor(
  data$DiffWalk,
  levels = c(0,1), 
  labels = c("No", "Yes")
)

data$Sex <- factor(
  data$Sex,
  levels = c(0,1), 
  labels = c("Female", "Male")
)

data$Age <- factor(
  data$Age,
  levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 
  labels = c("18-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80_or_older")
)

data$Education <- factor(
  data$Education,
  levels = c(1, 2, 3, 4, 5, 6), 
  labels = c("Never_attended_school_or_only_kindergarten", "Elementary", "Some_high_school", "High school_graduate", "Some_college_or_technical_school", "College_graduate")
)

data$Income <- factor(
  data$Income,
  levels = c(1, 2, 3, 4, 5, 6, 7, 8), 
  labels = c("Less_than_10K", "10K_to_less_than_15K", "15K_to_Less_than_20K", "20K_to_less_than_25K", "25K_to_less_than_35K", "35K_to_less_than_50k", "50k_to_less_than_75k", "75k_or_more")
)

str(data)
```

## Summarizations

Let's look at a summary of each numeric column in data, including minimum, 1st quartile (Q1), median (Q2), mean, 3rd quartile (Q3), and maximum values.

```{r}
summary(data_no_duplicates)
```

Let's also view our response variable Diabetes_binary.

```{r}
p <- ggplot(data = data, aes(x = Diabetes_binary)) +
  geom_bar() +
  labs(x = "Diabetes Status") + 
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 

print(p)
```

Now let's look at the distributions of variables and their relation with Diabetes_binary in bar charts.

```{r}

# Loop through each variable except the first variable Diabetes_binary
for (i in 2:ncol(data)) {
  variable <- data[[i]]
  
  p <- ggplot(data = data, aes(x = variable, fill = Diabetes_binary)) +
    geom_bar() +
    labs(x = names(data)[i]) +  
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  print(p)
}
```

Let's further look at correlation heatmap which shows relation between variables.

```{r}
# Compute correlation matrix
corr_matrix <- cor(data_no_duplicates)

# Convert correlation matrix to data frame for easier manipulation
corr_df <- as.data.frame(as.table(corr_matrix))

corr <- corr_df |>
  filter(Var2 == "Diabetes_binary") |>
  arrange(desc(Freq))
corr

# Rename columns for clarity
colnames(corr_df) <- c("Variable1", "Variable2", "Correlation")

# Sort correlation values from largest to smallest
sorted_corr_df <- corr_df[order(-abs(corr_df$Correlation)), ]

# Create correlation heatmap
corrplot::corrplot(corr_matrix, 
                   method = "color", 
                   type = "lower", 
                   order = "hclust",
                   tl.col = "black",
                   tl.srt = 45)
```

From all the exploratory analysis above, we can see that there are variableshighly positively correlated with each other: PhysHlth and GenHlth, PhysHlth and DiffWalk, GenHlth and DiffWalk, Income and Education. There are variables highly negativelycorrelated with each other: Income and GenHlth, Income and DiffWalk. Variables (GenHlth, HighBP, DiffWalk, BMI, HighChol, Age, HeartDiseaseorAttack, PhysHlth) are positively correlated (Freq over 0.1) with Diabetes_binary; variables (Income, Education, PhysActivity) are negatively correlated (Freq lower than -0.1) with Diabetes_binary.
